<?php

declare(strict_types=1);

namespace Jostkleigrewe\OpenAiCoreBundle\Dto\Client\Core;

use Symfony\Component\Serializer\Annotation;

/**
 * @link https://platform.openai.com/docs/api-reference/completions/create
 */
class FunctionCall
{
    /**
     * The arguments to call the function with, as generated by the model in JSON format.
     * Note that the model does not always generate valid JSON, and may hallucinate parameters
     * not defined by your function schema. Validate the arguments in your code before calling
     * your function.
     *
     * @var string $arguments
     * @Annotation\SerializedName("arguments")
     */
    public string $arguments;

    /**
     * The name of the function to call.
     *
     * @var string $name
     * @Annotation\SerializedName("name")
     */
    public string $name;

    /**
     * @param string $arguments
     * @param string $name
     */
    public function __construct(string $arguments, string $name)
    {
        $this->arguments = $arguments;
        $this->name = $name;
    }

    public function getArguments(): string
    {
        return $this->arguments;
    }

    public function setArguments(string $arguments): static
    {
        $this->arguments = $arguments;
        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): static
    {
        $this->name = $name;
        return $this;
    }

}